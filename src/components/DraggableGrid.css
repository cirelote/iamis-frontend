/* DraggableGrid.css */

.draggable-grid-container {
  /* Make it fluid instead of hard-coding vw/vh */
  width: 100%;
  /* Let it grow in height or scroll, rather than forcing 100vh */
  min-height: 500px; /* You can adjust as needed */
  position: relative;
  margin: 0;
  padding: 0;
  background: #fafafa;
  box-sizing: border-box;
  /* Allow scrolling if the grid overflows horizontally/vertically */
  overflow: auto;
}

/* Add sensor button top-left */
.add-sensor-btn {
  position: absolute;
  top: 1rem;
  left: 1rem;
  z-index: 1000;
  padding: 0.5rem 1rem;
  cursor: pointer;
}

.grid-container {
  /* Remove the fixed 1200px x 800px.
     Let react-grid-layout handle item positioning or simply expand. */
  position: relative;
  margin: 0 auto; /* center it if itâ€™s smaller than parent */
  background-image:
    linear-gradient(to right, #ccc 1px, transparent 1px),
    linear-gradient(to bottom, #ccc 1px, transparent 1px);
  /* Keep the same grid background pattern. */
  background-size: 200px 100px;
}

/* Overlay used for drawing new tiles */
.page-overlay {
  position: absolute;
  top: 0;
  left: 0;
  /* No longer forcing 1200x800 */
  width: 100%;
  height: 100%;
  background: transparent;
  z-index: 500;
}

.layout {
  position: absolute;
  top: 0;
  left: 0;
  margin: 0;
}

.tile-wrapper {
  background: #fff;
  border: 1px solid #ddd;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.tile {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

/* Draggable handle on tile-header */
.tile-header {
  background: #f4f4f4;
  padding: 0.4rem;
  border-bottom: 1px solid #ddd;
  text-align: center;
  cursor: move;
  user-select: none;
}

.tile-header h4 {
  margin: 0;
  font-size: 0.8rem;
  font-weight: 600;
}

.tile-body {
  flex: 1;
  display: flex;
  flex-direction: column;
  cursor: pointer; /* to indicate clickable for fullscreen */
  overflow: hidden;
}
